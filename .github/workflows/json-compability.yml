name: Compability Check

on:
  pull_request:

jobs:
  compatible:
    name: Is change incompatible
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v4
    - name: Run script
      id: check_incompability
      run: |
        cd minka-js
        npm ci
        npm run check

  addLabel:
    name: Add label PR on failure
    needs: compatible
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'incompatible-changes',
              color: 'FF0000'
            }).catch(err => console.log(`Label already exists`))

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['incompatible-changes']
            })
          github-token: ${{secrets.GITHUB_TOKEN}}

  removeLabel:
    name: Remove label PR on success
    needs: compatible
    if: ${{ success() }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'incompatible-changes',
              color: 'FF0000'
            }).catch(err => console.log(`Label already exists`))

            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'incompatible-changes'
            })
          github-token: ${{secrets.GITHUB_TOKEN}}

