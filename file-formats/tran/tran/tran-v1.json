{
  "$comment": "This file is autogenerated, do not edit manually, see https://github.com/SAP/abap-file-formats for more information.",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/SAP/abap-file-formats/blob/main/file-formats/tran/tran-v1.json",
  "title": "Transaction",
  "description": "Transaction",
  "type": "object",
  "properties": {
    "formatVersion": {
      "title": "Format Version",
      "description": "Format version",
      "type": "string",
      "const": "1"
    },
    "header": {
      "title": "Header",
      "description": "Header",
      "type": "object",
      "properties": {
        "description": {
          "title": "Description",
          "description": "Description of the ABAP object",
          "type": "string",
          "maxLength": 80
        },
        "originalLanguage": {
          "title": "Original Language",
          "description": "Original language of the ABAP object",
          "type": "string",
          "minLength": 2
        },
        "abapLanguageVersion": {
          "title": "ABAP Language Version",
          "description": "ABAP language version",
          "type": "string",
          "enum": [
            "standard",
            "keyUser",
            "cloudDevelopment"
          ],
          "enumTitles": [
            "Standard",
            "ABAP for Key Users",
            "ABAP Cloud Development"
          ],
          "enumDescriptions": [
            "Standard",
            "ABAP for key user extensibility",
            "ABAP cloud development"
          ],
          "default": "standard"
        }
      },
      "additionalProperties": false,
      "required": [
        "description",
        "originalLanguage"
      ]
    },
    "generalInformation": {
      "title": "General Information",
      "description": "General Information contains details about the transaction, depending on the transaction type.",
      "type": "object",
      "properties": {
        "transactionType": {
          "title": "Transaction Type",
          "description": "The transaction type defines which object will be started at runtime when the transaction is called. Depending on the transaction type, other type of object can be started and different fields become relevant.",
          "type": "string",
          "enum": [
            "dia",
            "oo",
            "par",
            "rep",
            "var"
          ],
          "enumTitles": [
            "Dialog Transaction",
            "OO Transaction",
            "Parameter Transaction",
            "Report Transaction",
            "Variant Transaction"
          ],
          "enumDescriptions": [
            "The runtime calls a dynpro of a function group, module pool or report. The dynpro specified as initial screen must not be a selection screen. The program logic defines which screens are displayed after the initial screen.",
            "At runtime, the system calls a class method. The transaction links to either the ABAP Object Services Transaction Service (for persistent objects) or to a public method of a class. For instance methods, the system auto-creates a class instance.",
            "Parameter transactions specialize dialog or report transactions by presetting initial screen values. You can also skip the initial screen to prevent users from changing these predefined values.",
            "The runtime calls a dynpro of a report. The dynpro specified as initial screen must be a selection screen. The execution of a report usually has three stages: data entry, data processing, and data output.",
            "Variant transactions customize dialog or report transactions by adapting menus and screens at runtime. They let you preset field values, set field attributes, or hide screens to streamline user interaction."
          ],
          "default": "par"
        },
        "lockStatus": {
          "title": "Lock Status",
          "description": "Transaction lock status indicates whether a transaction is currently blocked from execution. It helps prevent unauthorized or unintended use, especially during maintenance, development, or when a transaction is obsolete or being phased out.",
          "type": "boolean"
        },
        "dialogTransaction": {
          "title": "Dialog Transaction",
          "description": "The runtime calls a dynpro of a function group, module pool or report. The dynpro specified as initial screen must not be a selection screen. The program logic defines which screens are displayed after the initial screen.",
          "type": "object",
          "properties": {
            "programName": {
              "title": "Program",
              "description": "Program name for dialog transaction",
              "type": "string",
              "maxLength": 40
            },
            "programDynnr": {
              "title": "Dynpro",
              "description": "Transaction start dynpro number for dialog transaction",
              "type": "integer",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "stvMaintenanceMode": {
              "title": "Editing of standard transaction variant allowed",
              "description": "If this indicator is set, activating a transaction variant as standard transaction variant is enabled in the transaction variant maintenance. This changes how the transaction looks at runtime, when it is started directly via its transaction code.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "parameterTransaction": {
          "title": "Parameter Transaction",
          "description": "Parameter transactions specialize dialog or report transactions by presetting initial screen values. You can also skip the initial screen to prevent users from changing these predefined values.",
          "type": "object",
          "properties": {
            "parParentTransactionCode": {
              "title": "Parent Transaction",
              "description": "The parent transaction code of the parameter transaction defines the transaction that provides the program and the dynpro number that are started when the transaction is called. The parent transaction can be a dialog or a report transaction.",
              "type": "string",
              "maxLength": 20
            },
            "skipInitialScreenMode": {
              "title": "Skip Initial Screen",
              "description": "Skip initial screen mode allows bypassing the first screen of the parent transaction by using predefined values.",
              "type": "string",
              "maxLength": 1
            },
            "parameterValues": {
              "title": "Parameter values",
              "description": "Parameter values",
              "type": "array",
              "items": {
                "title": "Parameter Value",
                "description": "Parameter transaction parameter value",
                "type": "object",
                "properties": {
                  "parameterName": {
                    "title": "Parameter Name",
                    "description": "Name of the parameter for the parameter transaction",
                    "type": "string",
                    "maxLength": 132
                  },
                  "parameterValue": {
                    "title": "Parameter Value",
                    "description": "Value for the parameter of the parameter transaction",
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "additionalProperties": false,
                "required": [
                  "parameterName"
                ]
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "parParentTransactionCode"
          ]
        },
        "reportTransaction": {
          "title": "Report Transaction",
          "description": "The runtime calls a dynpro of a report. The dynpro specified as initial screen must be a selection screen. The execution of a report usually has three stages: data entry, data processing, and data output.",
          "type": "object",
          "properties": {
            "reportName": {
              "title": "Report",
              "description": "Report name for the report transaction",
              "type": "string",
              "maxLength": 40
            },
            "reportDynnr": {
              "title": "Screen",
              "description": "Transaction start selection screen for the report transaction",
              "type": "integer",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "reportVariantName": {
              "title": "Variant",
              "description": "Variant name for the report transaction",
              "type": "string",
              "maxLength": 14
            }
          },
          "additionalProperties": false
        },
        "ooTransaction": {
          "title": "OO Transaction",
          "description": "At runtime, the system calls a class method. The transaction links to either the ABAP Object Services Transaction Service (for persistent objects) or to a public method of a class. For instance methods, the system auto-creates a class instance.",
          "type": "object",
          "properties": {
            "localInProgramIndi": {
              "title": "Local in Program",
              "description": "If this indicator is set, the OO transaction uses a local ABAP class within this specified ABAP program. Otherwise it uses a global ABAP class.",
              "type": "boolean"
            },
            "classProgramName": {
              "title": "Program",
              "description": "Name of the program for the OO transacton",
              "type": "string",
              "maxLength": 40
            },
            "className": {
              "title": "Class",
              "description": "Name of the ABAP class",
              "type": "string",
              "maxLength": 30
            },
            "methodName": {
              "title": "Method Name",
              "description": "Name of the method of the ABAP class",
              "type": "string",
              "maxLength": 61
            },
            "ooTransactionModelIndi": {
              "title": "OO Transaction Model",
              "description": "If this indicator is set, the OO transaction follows the object-oriented transaction model. See the interface IF_OS_TRANSACTION_MANAGER for more information.",
              "type": "boolean"
            },
            "updateMode": {
              "title": "Update Mode",
              "description": "The update mode for an OO transaction defines how data changes are processed: synchronously, asynchronously, or immediately.",
              "type": "string",
              "enum": [
                "asynchronous",
                "synchronous",
                "local"
              ],
              "enumTitles": [
                "Asynchronous",
                "Synchronous",
                "Local"
              ],
              "enumDescriptions": [
                "Asynchronous",
                "Synchronous",
                "Local"
              ],
              "default": "asynchronous"
            }
          },
          "additionalProperties": false,
          "required": [
            "className",
            "methodName"
          ]
        },
        "variantTransaction": {
          "title": "Variant Transaction",
          "description": "Variant transactions customize dialog or report transactions by adapting menus and screens at runtime. They let you preset field values, set field attributes, or hide screens to streamline user interaction.",
          "type": "object",
          "properties": {
            "varParentTransactionCode": {
              "title": "Parent Transaction",
              "description": "The parent transaction code links related transaction to its original (parent) transaction. It enables inheritance of settings like UI attributes or authorizations, ensuring consistency and reducing duplication in configuration.",
              "type": "string",
              "maxLength": 20
            },
            "transactionVariantCiIndi": {
              "title": "Cross Client",
              "description": "If the indicator is set, the transaction variant is cross-client. If the switch is not set, the transaction variant is client-specific.",
              "type": "boolean"
            },
            "transactionCiVariantName": {
              "title": "Transaction Variant",
              "description": "Name of the cross-client transaction variant. A cross-client transaction variant is available in the system regardless of which client is currently active, and the field contents used in the transaction variant must be available in all clients.",
              "type": "string",
              "maxLength": 30
            },
            "transactionVariantName": {
              "title": "Transaction Variant",
              "description": "Name of the client-specific transaction variant. A client-specific transaction variant exists only in the client where it was created, and the field contents used in the transaction variant must be available in that client.",
              "type": "string",
              "maxLength": 30
            }
          },
          "additionalProperties": false,
          "required": [
            "varParentTransactionCode"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "transactionType"
      ]
    },
    "userInterface": {
      "title": "User Interface",
      "description": "User Interface manage UI classification and GUI support",
      "type": "object",
      "properties": {
        "inheritanceMode": {
          "title": "Inherit UI Attributes",
          "description": "Transaction UI Attributes Inheritance Mode controls how UI settings like screen variants or field attributes are inherited from a parent transaction to its variants, ensuring consistent user interfaces across related transactions.",
          "type": "boolean"
        },
        "uiClasification": {
          "title": "UI Classification",
          "description": "Professional User Transactions emulate SAP GUI for Windows, suited for expert users handling complex tasks. Easy Web Transactions offer a simplified, web-friendly UI via SAP GUI for HTML, ideal for casual users, without menus or toolbars.",
          "type": "string",
          "enum": [
            "professionalUserTransaction",
            "easyWebTransaction"
          ],
          "enumTitles": [
            "Professional User Transaction",
            "Easy Web Transaction"
          ],
          "enumDescriptions": [
            "Professional User Transactions are designed for experienced, frequent users of the SAP System who mainly run highly complex transactions.",
            "Easy Web Transactions are the logical further development of Internet Application Components (IACs). You must specify a service name for an Easy Web Transactions, if one exists and is different from the name of the transaction."
          ],
          "default": "professionalUserTransaction"
        },
        "iacServiceName": {
          "title": "Service",
          "description": "The Service Name of an Internet Application Component (IAC) links a transaction to a web service, enabling its execution via a browser. It's required for Easy Web Transactions if the service name differs from the transaction name.",
          "type": "string",
          "maxLength": 14
        },
        "pervasiveMode": {
          "title": "Pervasive Enabled",
          "description": "Transaction Pervasive Mode enables a simplified, responsive UI for transactions on various devices, like tablets or smartphones. It's designed for casual users needing quick, intuitive access to core functions with minimal screen complexity.",
          "type": "boolean"
        },
        "webguiMode": {
          "title": "SAP GUI for HTML",
          "description": "The transaction supports the start from SAP GUI for HTML.",
          "type": "boolean"
        },
        "platinMode": {
          "title": "SAP GUI for Java",
          "description": "The transaction supports the start from SAP GUI for Java.",
          "type": "boolean"
        },
        "win32Mode": {
          "title": "SAP GUI for Windows",
          "description": "The transaction supports the start from SAP GUI for Windows.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "authorizations": {
      "title": "Authorizations",
      "description": "Authorizations contain settings related to security and access control: Start Authorization Object and Authorization Default Values",
      "type": "object",
      "properties": {
        "startAuthorizationObject": {
          "title": "Start Authorization Object",
          "description": "A start authorization object controls who may run a transaction. It is checked at transaction start. Fields must have single or empty values. Empty fields trigger a DUMMY check. This object is auto-assigned in the authorization defaults transaction.",
          "type": "object",
          "properties": {
            "authObjectName": {
              "title": "Start Authorization Object Name",
              "description": "Name of the start authorization object",
              "type": "string",
              "maxLength": 10
            },
            "authObjectFieldValues": {
              "title": "Start Authorization Object Field Values",
              "description": "Fields with values for the start authorization object",
              "type": "array",
              "items": {
                "title": "Start Authorization Object Field Value",
                "description": "A start authorization object controls who may run a transaction. It is checked at transaction start. Fields must have single or empty values. Empty fields trigger a DUMMY check. This object is auto-assigned in the authorization defaults of transaction.",
                "type": "object",
                "properties": {
                  "authFieldName": {
                    "title": "Authorization Field",
                    "description": "Name of the authorization field of the start authorization object",
                    "type": "string",
                    "maxLength": 10
                  },
                  "authFieldValue": {
                    "title": "Authorization Value",
                    "description": "Value for the authorization field",
                    "type": "string",
                    "maxLength": 40
                  }
                },
                "additionalProperties": false,
                "required": [
                  "authFieldName"
                ]
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "authObjectName"
          ]
        },
        "authorizationDefaults": {
          "title": "Authorization Default Values",
          "description": "Authorization default values define which authorization objects and field values are automatically proposed when creating roles for a transaction, simplifying role maintenance and ensuring consistent security settings across users and roles.",
          "type": "object",
          "properties": {
            "maintenanceMode": {
              "title": "Maintenance Mode",
              "description": "Maintenance modes for applications define how applications can be modified.",
              "type": "string",
              "enum": [
                "manual",
                "automatic",
                "automaticBasisObjects",
                "noDefaultValues",
                "deprecated",
                "obsolete"
              ],
              "enumTitles": [
                "Manual Maintenance",
                "Automatic Maintenance (All Objects)",
                "Automatic Maintenance (Basis Authorization Objects Only)",
                "Application Does Not Require Default Values",
                "Application Is Deprecated",
                "Application Is Obsolete"
              ],
              "enumDescriptions": [
                "This mode is appropriate as long as maintenance of default data has not been completed yet. New objects whose check has been detected by the authorization trace are added to the object list in change mode with the maintenance status Not maintained.",
                "In change mode, all authorization objects added from the authorization trace are automatically assigned the default status No Default.",
                "Only authorization objects from the application areas Basis (S_*) and HR (P_* and PLOG) are automatically added with the default status No Default. All other new objects are given the status Unmaintained, which must be changed.",
                "This modus is given to all applications for whose execution only the start authorization is required.",
                "It is used to classify applications that are not being developed any more but that can still be used. In the case of transactions, it is possible to designate successor transactions.",
                "This mode is used to classify applications that are not being developed any more and because of this do not meet important functional requirements or are not needed any more."
              ],
              "default": "manual"
            },
            "inheritanceMode": {
              "title": "Inheritance Mode",
              "description": "Authorization defaults inheritance mode controls how authorization settings are passed from a parent transaction to its variants, ensuring consistent access rights and roles across related transactions.",
              "type": "boolean"
            },
            "documentation": {
              "title": "Authorization Defaults Documentation for Application",
              "description": "Authorization defaults documentation for application.",
              "type": "string"
            },
            "authObjects": {
              "title": "Authorization Defaults Authorization Objects",
              "description": "Authorization default values define which authorization objects and field values are automatically proposed when creating roles for a transaction, simplifying role maintenance and ensuring consistent security settings across users and roles.",
              "type": "array",
              "items": {
                "title": "Authorization Defaults Authorization Object Details",
                "description": "Authorization default values define which authorization objects and field values are automatically proposed when creating roles for a transaction, simplifying role maintenance and ensuring consistent security settings across users and roles.",
                "type": "object",
                "properties": {
                  "authObjectName": {
                    "title": "Authorization Object Name",
                    "description": "Name of the authorization object",
                    "type": "string",
                    "maxLength": 10
                  },
                  "maintenanceStatus": {
                    "title": "Maintenance Status",
                    "description": "The maintenance status of an authorization object controls if AUTHORITY-CHECK runs for it in its application and whether an authorization default is added to a data of role data by the profile generator when the app is in the role menu.",
                    "type": "string",
                    "enum": [
                      "undefined",
                      "noDefault",
                      "defaultWithValues",
                      "defaultWithoutValues",
                      "inactiveValues"
                    ],
                    "enumTitles": [
                      "Undefined",
                      "No Default",
                      "Default With Field Values",
                      "Default Without Field Values",
                      "Default Inactive"
                    ],
                    "enumDescriptions": [
                      "The maintenance status is undefined and must be specified.",
                      "This status is given to all objects that are not required for the execution of functions in the application. The authorization check is executed in exactly the same way the statuses described above.",
                      "This default status is assigned to all objects that are used to protect functions within the associated application and for which the delivery of fixed values in one or more authorization fields would help to simplify authorization maintenance in roles.",
                      "This status is suitable for objects whose authorizations are required for using an application, but all of whose authorization fields have to be maintained by the role administrator with customer-specific values.",
                      "For objects with this status, the authorization check always returns the value sy-subrc = 0 regardless of which authorizations the user actually has. For objects belonging to the application areas Basis (S_*) and HR (P_* and PLOG), it is forbidden."
                    ],
                    "default": "defaultWithValues"
                  },
                  "documentation": {
                    "title": "Authorization Defaults Documentation for Object",
                    "description": "Authorization defaults documentation for object",
                    "type": "string"
                  },
                  "authObjectFieldValues": {
                    "title": "Authorization Defaults Authorization Field Value",
                    "description": "Authorization defaults authorization field value",
                    "type": "array",
                    "items": {
                      "title": "Authorization Defaults Authorization Field Value",
                      "description": "Authorization defaults authorization field value",
                      "type": "object",
                      "properties": {
                        "authFieldName": {
                          "title": "Authorization Field",
                          "description": "Authorization field",
                          "type": "string",
                          "maxLength": 10
                        },
                        "authFieldLowValue": {
                          "title": "From",
                          "description": "From value",
                          "type": "string",
                          "maxLength": 40
                        },
                        "authFieldHighValue": {
                          "title": "To",
                          "description": "To value",
                          "type": "string",
                          "maxLength": 40
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "authorizationDefaults"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "formatVersion",
    "header",
    "generalInformation"
  ]
}
